{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.10","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":29781,"databundleVersionId":2887556,"sourceType":"competition"}],"dockerImageVersionId":30497,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/loki97/store-sales-time-series-using-arima-model?scriptVersionId=133669008\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"**Store Sales : Time Series using ARIMA model**\n\n","metadata":{}},{"cell_type":"code","source":"#import the libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:06.666165Z","iopub.execute_input":"2023-06-15T12:54:06.666623Z","iopub.status.idle":"2023-06-15T12:54:06.671992Z","shell.execute_reply.started":"2023-06-15T12:54:06.666594Z","shell.execute_reply":"2023-06-15T12:54:06.670879Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#load the dataset\ndf_t = pd.read_csv(\"/kaggle/input/store-sales-time-series-forecasting/train.csv\")\ndf_h = pd.read_csv(\"/kaggle/input/store-sales-time-series-forecasting/holidays_events.csv\")\ndf_o = pd.read_csv(\"/kaggle/input/store-sales-time-series-forecasting/oil.csv\")\ndf_s = pd.read_csv(\"/kaggle/input/store-sales-time-series-forecasting/stores.csv\")\n","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:06.674639Z","iopub.execute_input":"2023-06-15T12:54:06.675121Z","iopub.status.idle":"2023-06-15T12:54:09.5319Z","shell.execute_reply.started":"2023-06-15T12:54:06.675077Z","shell.execute_reply":"2023-06-15T12:54:09.531013Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#merge all provided dataset\ndf = pd.merge(df_t, df_h, on = \"date\", how = \"left\")\ndf = pd.merge(df, df_o, on = \"date\", how = \"left\")\ndf = pd.merge(df, df_s, on = \"store_nbr\", how = \"left\")","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:09.53326Z","iopub.execute_input":"2023-06-15T12:54:09.533672Z","iopub.status.idle":"2023-06-15T12:54:13.126239Z","shell.execute_reply.started":"2023-06-15T12:54:09.533633Z","shell.execute_reply":"2023-06-15T12:54:13.125291Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head(10)","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:13.128136Z","iopub.execute_input":"2023-06-15T12:54:13.128528Z","iopub.status.idle":"2023-06-15T12:54:13.148852Z","shell.execute_reply.started":"2023-06-15T12:54:13.128485Z","shell.execute_reply":"2023-06-15T12:54:13.147743Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:13.150048Z","iopub.execute_input":"2023-06-15T12:54:13.150387Z","iopub.status.idle":"2023-06-15T12:54:13.750918Z","shell.execute_reply.started":"2023-06-15T12:54:13.150362Z","shell.execute_reply":"2023-06-15T12:54:13.750079Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import datetime as dt\n\n#creating the datetime type column using string value from date column\ndf[\"timestamp\"] = pd.to_datetime(df[\"date\"])","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:13.75215Z","iopub.execute_input":"2023-06-15T12:54:13.752457Z","iopub.status.idle":"2023-06-15T12:54:14.051683Z","shell.execute_reply.started":"2023-06-15T12:54:13.752432Z","shell.execute_reply":"2023-06-15T12:54:14.050784Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df[\"year\"] = df[\"timestamp\"].dt.year\ndf[\"year\"].value_counts()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:14.053092Z","iopub.execute_input":"2023-06-15T12:54:14.053392Z","iopub.status.idle":"2023-06-15T12:54:14.370487Z","shell.execute_reply.started":"2023-06-15T12:54:14.053368Z","shell.execute_reply":"2023-06-15T12:54:14.369377Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Data Analysis","metadata":{}},{"cell_type":"code","source":"fig, axes = plt.subplots(1, 3, figsize=(12, 4))\n\ngrouped_year = df.groupby(\"year\")\ngrouped_year_sales = grouped_year[\"sales\"].mean()\naxes[0].bar(grouped_year_sales.index, grouped_year_sales)\naxes[0].set_title(\"Average sales from 2013 - 2017\")\n\ngrouped_year_oil = grouped_year[\"dcoilwtico\"].mean()\naxes[1].bar(grouped_year_oil.index, grouped_year_oil)\naxes[1].set_title(\"average oil price from 2013 - 2017\")\n\ngrouped_year_promotion = grouped_year[\"onpromotion\"].mean()\naxes[2].bar(grouped_year_promotion.index, grouped_year_promotion)\naxes[2].set_title(\"average promotion for products from 2013 - 2017\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:14.37185Z","iopub.execute_input":"2023-06-15T12:54:14.372775Z","iopub.status.idle":"2023-06-15T12:54:15.567873Z","shell.execute_reply.started":"2023-06-15T12:54:14.372742Z","shell.execute_reply":"2023-06-15T12:54:15.566716Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Average sales**\nFrom the chart it is clear there is an increasing trend in average sales from 2013 to 2017\n\n**Average oil price**\nThe oil price in 2013 and 2014 is above 90 but after 2014 the price of the oil falls to 50. The decrease in the oil price may have influenced the number of sales\n\n**Average promotion of product**\nThere is no investment in promotion in the year 2013. From the 2014 to 2017 we can observe there is a steady increase in promotion of products \n\n","metadata":{}},{"cell_type":"code","source":"df[\"month\"] = df[\"timestamp\"].dt.strftime(\"%B\")\nmonth_order = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n               \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\ndf[\"month\"] = pd.Categorical(df[\"month\"], categories=month_order, ordered=True)","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:15.571349Z","iopub.execute_input":"2023-06-15T12:54:15.571781Z","iopub.status.idle":"2023-06-15T12:54:29.808033Z","shell.execute_reply.started":"2023-06-15T12:54:15.571752Z","shell.execute_reply":"2023-06-15T12:54:29.806814Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig, axes = plt.subplots(1, 3, figsize=(15, 4))\n\ngrouped_month_sales = df.groupby([\"year\", \"month\"])[\"sales\"].mean().reset_index()\nsns.lineplot(x = \"month\", y = \"sales\", hue = \"year\", data = grouped_month_sales, palette=\"Set1\", ax=axes[0], legend = False)\naxes[0].tick_params(axis='x', rotation=45)\naxes[0].set_ylabel('Average Sales')\naxes[0].legend(bbox_to_anchor=(1.05, 1), loc='upper left')\n\ngrouped_month_oil = df.groupby([\"year\", \"month\"])[\"dcoilwtico\"].mean().reset_index()\ngrouped_month_oil[\"dcoilwtico\"] = grouped_month_oil[\"dcoilwtico\"].astype(float)\nsns.lineplot(x = \"month\", y = \"dcoilwtico\", hue = \"year\", data = grouped_month_oil, palette=\"Set1\", ax=axes[1], legend = False)\naxes[1].tick_params(axis='x', rotation=45)\naxes[1].set_ylabel('Average oil price')\n\ngrouped_month_promotion = df.groupby([\"year\", \"month\"])[\"onpromotion\"].mean().reset_index()\nsns.lineplot(x = \"month\", y = \"onpromotion\", hue = \"year\", data = grouped_month_promotion, palette=\"Set1\", ax=axes[2])\naxes[2].tick_params(axis='x', rotation=45)\naxes[2].legend(bbox_to_anchor=(1.05, 1), loc='upper left')\naxes[2].set_ylabel('Average promotion')\n\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:29.809373Z","iopub.execute_input":"2023-06-15T12:54:29.809706Z","iopub.status.idle":"2023-06-15T12:54:30.952175Z","shell.execute_reply.started":"2023-06-15T12:54:29.809679Z","shell.execute_reply":"2023-06-15T12:54:30.951018Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Average sales in months**\nIt is clear from the line chart there is a sudden increase in sales during November and December may be due to festivals.\n\n**Average oil price in months**\nThere is no clear trend in oil price when compared to different months.\n\n**Average promotion of products in months**\nfrom the chart it is clear there is substantial increase in promotion in every consecutive year. Mostly there is an increasing trend in promotion over the last 4 months of the year.\n\n****","metadata":{}},{"cell_type":"code","source":"state_group = df.groupby([\"state\"])\nstate_price = state_group[\"sales\"].mean()\nstate_oil = state_group[\"dcoilwtico\"].mean()\nstate_promotion = state_group[\"onpromotion\"].mean()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:30.953503Z","iopub.execute_input":"2023-06-15T12:54:30.954322Z","iopub.status.idle":"2023-06-15T12:54:31.278985Z","shell.execute_reply.started":"2023-06-15T12:54:30.954291Z","shell.execute_reply":"2023-06-15T12:54:31.277775Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig, axes = plt.subplots(1, 3, figsize=(12, 4))\n\naxes[0].bar(state_price.index, state_price)\naxes[0].set_title(\"Average sales in state\")\naxes[0].tick_params(axis='x', rotation=45)\n\naxes[1].bar(state_oil.index, state_oil)\naxes[1].set_title(\"Average oil price in state\")\naxes[1].tick_params(axis='x', rotation=45)\n\naxes[2].bar(state_promotion.index, state_promotion)\naxes[2].set_title(\"Average promotion in state\")\naxes[2].tick_params(axis='x', rotation=45)\n\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:31.280325Z","iopub.execute_input":"2023-06-15T12:54:31.280677Z","iopub.status.idle":"2023-06-15T12:54:32.053289Z","shell.execute_reply.started":"2023-06-15T12:54:31.280647Z","shell.execute_reply":"2023-06-15T12:54:32.052184Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Sales and promotion in states**\nThe Pichincha state has the highest average sales and promotion when compared to other states. The Manabi state has average sales less than 100 and the promotion for that states is less when compared to other states.\n\n**oil price in states**\nThe oil price is same in all states","metadata":{}},{"cell_type":"code","source":"city_group = df.groupby([\"city\"])\ncity_price = city_group[\"sales\"].mean()\ncity_oil = city_group[\"dcoilwtico\"].mean()\ncity_promotion = city_group[\"onpromotion\"].mean()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:32.054998Z","iopub.execute_input":"2023-06-15T12:54:32.055748Z","iopub.status.idle":"2023-06-15T12:54:32.378683Z","shell.execute_reply.started":"2023-06-15T12:54:32.055707Z","shell.execute_reply":"2023-06-15T12:54:32.377495Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig, axes = plt.subplots(1, 3, figsize=(15, 4))\n\naxes[0].bar(city_price.index, city_price)\naxes[0].set_title(\"Average sales in city\")\naxes[0].tick_params(axis='x', rotation=45)\n\naxes[1].bar(city_oil.index, city_oil)\naxes[1].set_title(\"Average oil price in city\")\naxes[1].tick_params(axis='x', rotation=45)\n\naxes[2].bar(city_promotion.index, city_promotion)\naxes[2].set_title(\"Average promotion in city\")\naxes[2].tick_params(axis='x', rotation=45)\n\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:32.380347Z","iopub.execute_input":"2023-06-15T12:54:32.380765Z","iopub.status.idle":"2023-06-15T12:54:33.269357Z","shell.execute_reply.started":"2023-06-15T12:54:32.380728Z","shell.execute_reply":"2023-06-15T12:54:33.268187Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Sales and promotion in cities**\nThe playas city has the lowest sales and promotion and the Quevedo state has the highest average sales of above 500.","metadata":{}},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:33.271061Z","iopub.execute_input":"2023-06-15T12:54:33.271499Z","iopub.status.idle":"2023-06-15T12:54:33.295663Z","shell.execute_reply.started":"2023-06-15T12:54:33.271457Z","shell.execute_reply":"2023-06-15T12:54:33.294439Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"grouped_data = df.groupby(\"timestamp\")\ntime_series = grouped_data[[\"sales\", \"dcoilwtico\"]].mean().reset_index()\ntime_series_copy = time_series.set_index(\"timestamp\")","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:33.297203Z","iopub.execute_input":"2023-06-15T12:54:33.297584Z","iopub.status.idle":"2023-06-15T12:54:35.304343Z","shell.execute_reply.started":"2023-06-15T12:54:33.297555Z","shell.execute_reply":"2023-06-15T12:54:35.303485Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# TIME SERIES ARIMA model\n\nTo fit an ARIMA model the data should be weakly stationary\n\n**The properties of weakly stationary model** \n* The mean of the time series does not change over time\n* The time series has a constant variance at each point\n* There should be no seasonality or trend in the data\n","metadata":{}},{"cell_type":"code","source":"import matplotlib.dates as mdates\nimport statsmodels.api as sm\nimport matplotlib\nsales_data = time_series_copy[\"sales\"].asfreq(\"D\")\nsales_data = sales_data.fillna(method=\"ffill\")\ndecomposition = sm.tsa.seasonal_decompose(sales_data[\"2013-01-01\": \"2013-02-28\"], model = \"additive\")\nfig = decomposition.plot()\nplt.show()","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2023-06-15T12:54:35.305485Z","iopub.execute_input":"2023-06-15T12:54:35.306084Z","iopub.status.idle":"2023-06-15T12:54:36.489247Z","shell.execute_reply.started":"2023-06-15T12:54:35.306053Z","shell.execute_reply":"2023-06-15T12:54:36.488045Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Seasonality**\nwe can clearly see there is a seasonal trend in the data based on every week to make the data weakly stationary we should remove this seasonal trend in the data\n\n**Residuals**\nThe residuals are not independent and it shows some seasonality. \n\nObserving seasonality and residuals plot it is clear the process is not weakly stationary.","metadata":{}},{"cell_type":"code","source":"decomposition = sm.tsa.seasonal_decompose(sales_data, model = \"additive\")\nfig, ax = plt.subplots()\nax.grid(True)\n\nyear = mdates.YearLocator(month = 1)\nmonth = mdates.MonthLocator(interval = 1)\n\nyear_format = mdates.DateFormatter(\"%Y\")\nmonth_format = mdates.DateFormatter(\"%m\")\n\nax.xaxis.set_minor_locator(month)\nax.xaxis.grid(True, which = \"minor\")\nax.xaxis.set_major_locator(year)\nax.xaxis.set_major_formatter(year_format)\n\nplt.plot(sales_data.index, sales_data, c = \"blue\")\nplt.plot(decomposition.trend.index, decomposition.trend, c = \"yellow\")\nplt.ylabel(\"Average sales\")","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:36.490762Z","iopub.execute_input":"2023-06-15T12:54:36.491631Z","iopub.status.idle":"2023-06-15T12:54:37.312873Z","shell.execute_reply.started":"2023-06-15T12:54:36.491598Z","shell.execute_reply":"2023-06-15T12:54:37.311757Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Trend**\nIt is clear from the chart there is an increasing trend in the sales data. Therefore the process is not weakly stationary we should remove this increasing trend to make the data weakly stationary.","metadata":{}},{"cell_type":"code","source":"from statsmodels.graphics.tsaplots import plot_pacf\nfrom statsmodels.graphics.tsaplots import plot_acf\n\nfig, ax = plt.subplots(figsize=(10, 6))\nplot_acf(sales_data, ax=ax)\nplt.xlabel('Lag')\nplt.title('Autocorrelation Function (ACF)')","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:37.314552Z","iopub.execute_input":"2023-06-15T12:54:37.315222Z","iopub.status.idle":"2023-06-15T12:54:37.686782Z","shell.execute_reply.started":"2023-06-15T12:54:37.315185Z","shell.execute_reply":"2023-06-15T12:54:37.685801Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**To understand what is Lag**\n* Let consider current date is 05-01-2013\n* Lag1 - 04-01-2013\n* Lag2 - 03-01-2013\n* Lag3 - 02-01-2013 and so on.\n* Mostly the lags which are near contribute more and it is natural. for ex: Today stock price mostly depend on previous day stock price.\n\n**Autocorrelation function plot**\n\nThe blue shade represents the confidence interval of 95%. If the acf spike within that shade it means the ceratin lag has no influence or correlation. The confidence limit range between (-2/sqrt(n), 2/sqrt(n)) where n is number of time interval. \n\nThe ACF spikes does not decrease over a period of time and it shows some seasonal pattern. Therefore, if we want to fit ARMA model the number of lag we have to consider is more and it will be very complex to fit the model. Therefore we have to try and make the data weakly stationary\n\n","metadata":{}},{"cell_type":"code","source":"diff_sales = sales_data.diff(1)\ndiff_sales = diff_sales.dropna()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:37.689057Z","iopub.execute_input":"2023-06-15T12:54:37.68937Z","iopub.status.idle":"2023-06-15T12:54:37.695192Z","shell.execute_reply.started":"2023-06-15T12:54:37.689345Z","shell.execute_reply":"2023-06-15T12:54:37.694102Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.plot(diff_sales.index, diff_sales)","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:37.696945Z","iopub.execute_input":"2023-06-15T12:54:37.697277Z","iopub.status.idle":"2023-06-15T12:54:38.209084Z","shell.execute_reply.started":"2023-06-15T12:54:37.697251Z","shell.execute_reply":"2023-06-15T12:54:38.208008Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Let Xt is today sales data then Xt-1 is the previous day sales data.\nTo make the data stationary we tried the first-order difference\nThe new time series data can be Yt\n\nYt = Xt - (Xt-1)\n\n**Observation**\nwe can observe the mean doesn't change over time and the variance is constant. \nThere is no trend and seasonality in the data.\nHowever we will check the ACF plot to check whether the process is weakly stationary or not.","metadata":{}},{"cell_type":"code","source":"from statsmodels.tsa.stattools import adfuller\n\nadfuller_test = adfuller(diff_sales)\nprint('ADF Statistic: %f' % adfuller_test[0])\nprint('p-value: ' , adfuller_test[1])\nprint('Critical Values:')\nfor key, value in adfuller_test[4].items():\n print('\\t%s: %.3f' % (key, value))","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:38.210476Z","iopub.execute_input":"2023-06-15T12:54:38.210791Z","iopub.status.idle":"2023-06-15T12:54:38.300655Z","shell.execute_reply.started":"2023-06-15T12:54:38.210766Z","shell.execute_reply":"2023-06-15T12:54:38.299032Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Augmented Dickey-Fuller (ADF) Test**: The ADF test is widely used to test for the presence of a unit root in a time series.\n\nH0 (Null Hypothesis) : The Time series is not weakly stationary\n\nH1 (Alternate Hypothesis) : The Time series is weakly stationary\n\nMore the negative value more the data is weakly stationary\n\nThe p-value is less than (0.05) 95% significance level. Therefore, according to ADF test the time series is weakly stationary. However we will check with ACF plot whether the time series is weakly stationary or not.\n","metadata":{}},{"cell_type":"code","source":"fig, ax = plt.subplots(figsize=(10, 6))\nplot_acf(diff_sales, ax=ax)\nplt.xlabel('Lag')\nplt.title('Autocorrelation Function (ACF)')","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:38.303139Z","iopub.execute_input":"2023-06-15T12:54:38.304173Z","iopub.status.idle":"2023-06-15T12:54:38.705573Z","shell.execute_reply.started":"2023-06-15T12:54:38.304119Z","shell.execute_reply":"2023-06-15T12:54:38.704292Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Autocorrelation function plot for Yt**\nThe spike does not falls to zero over a period of lag and we can observe seasonal pattern for every 7 days. Therefore the process is not stationary.","metadata":{}},{"cell_type":"code","source":"diff_sales_seasonal = diff_sales.diff(7)\ndiff_sales_seasonal = diff_sales_seasonal.dropna()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:38.711353Z","iopub.execute_input":"2023-06-15T12:54:38.711755Z","iopub.status.idle":"2023-06-15T12:54:38.717784Z","shell.execute_reply.started":"2023-06-15T12:54:38.711726Z","shell.execute_reply":"2023-06-15T12:54:38.716448Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.plot(diff_sales_seasonal.index, diff_sales_seasonal)","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:38.719369Z","iopub.execute_input":"2023-06-15T12:54:38.719844Z","iopub.status.idle":"2023-06-15T12:54:39.200177Z","shell.execute_reply.started":"2023-06-15T12:54:38.719803Z","shell.execute_reply":"2023-06-15T12:54:39.199025Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"To remove the seasonal pattern we differenced the Yt time series over a period of 7.\n\nZt = Yt - (Yt-7)","metadata":{}},{"cell_type":"code","source":"from statsmodels.tsa.stattools import adfuller\n\nadfuller_test = adfuller(diff_sales_seasonal)\nprint('ADF Statistic: %f' % adfuller_test[0])\nprint('p-value: ' , adfuller_test[1])\nprint('Critical Values:')\nfor key, value in adfuller_test[4].items():\n print('\\t%s: %.3f' % (key, value))","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:39.201559Z","iopub.execute_input":"2023-06-15T12:54:39.202028Z","iopub.status.idle":"2023-06-15T12:54:39.32857Z","shell.execute_reply.started":"2023-06-15T12:54:39.201989Z","shell.execute_reply":"2023-06-15T12:54:39.327206Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Augmented Dickey-Fuller (ADF) Test**: The ADF test is widely used to test for the presence of a unit root in a time series.\n\nH0 (Null Hypothesis) : The Time series is not weakly stationary\n\nH1 (Alternate Hypothesis) : The Time series is weakly stationary\n\nThe ADF statistics value is -51.4 which is less than -11.3 Therefore Zt is more weakly stationary when compared to first order differenced data Yt.\n\nThe p-value is less than 0.05 Therefore the time series is weakly stationary and the Null Hypothesis is rejected.","metadata":{}},{"cell_type":"code","source":"fig, ax = plt.subplots(figsize=(10, 6))\nplot_acf(diff_sales_seasonal, ax=ax)\nplt.xlabel('Lag')\nplt.title('Autocorrelation Function (ACF)')","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:39.330777Z","iopub.execute_input":"2023-06-15T12:54:39.331303Z","iopub.status.idle":"2023-06-15T12:54:39.752609Z","shell.execute_reply.started":"2023-06-15T12:54:39.331256Z","shell.execute_reply":"2023-06-15T12:54:39.751412Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Autocorrelation function plot**\nThe ACF plot shows the spike falls to zero over a period of lags. Therefore, we confirm that the time series Zt is weakly stationary.\n\nThe considerable amount of spike till 6 lags indicates the sales price mostly depend upon last 6 days sales and it may be a Moving Average (MA) component.\nThe lag 3 and lag 4 has no contribution as it falls within confidence interval.","metadata":{}},{"cell_type":"code","source":"fig, ax = plt.subplots(figsize=(10, 6))\nplot_pacf(diff_sales_seasonal, ax=ax, method='ywm')\nplt.xlabel('Lag')\nplt.title('Partial Autocorrelation Function (ACF)')","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:55:41.368204Z","iopub.execute_input":"2023-06-15T12:55:41.368823Z","iopub.status.idle":"2023-06-15T12:55:41.708289Z","shell.execute_reply.started":"2023-06-15T12:55:41.36879Z","shell.execute_reply":"2023-06-15T12:55:41.707204Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Partial Autocorrelation Function plot**\nThe PACF seems to decrease gradually over a period of time. This indicates there is no non-seasonal Auto Regressive (AR) component. However the spike at lag 7, 14, 21 indicates there is seasonal Auto Regressive (AR) components.","metadata":{}},{"cell_type":"markdown","source":"# ARMA (0, 1, 6) X (3, 1, 0) period 7 model\n\n* p - non seasonal AR component -> zero\n* d - difference -> 1 (First order difference)\n* q - non seasonal MA component -> 6\n* P - seasonal AR component -> 3\n* D - period difference -> 1\n* Q - seasonal MA component -> 0\n* S - Period -> 7","metadata":{}},{"cell_type":"code","source":"p = 0\nd = 1\nq = 6\nP = 3\nD = 1\nQ = 0\nS=7\nmodel = sm.tsa.ARIMA(sales_data, order=(p, d, q), seasonal_order=(P, D, Q, S))\nresult = model.fit()\nprint(result.summary())","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:40.123527Z","iopub.execute_input":"2023-06-15T12:54:40.124771Z","iopub.status.idle":"2023-06-15T12:54:49.73894Z","shell.execute_reply.started":"2023-06-15T12:54:40.124739Z","shell.execute_reply":"2023-06-15T12:54:49.73788Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"We have to fit an parsimonious model (simple model which is not complex). Therefore we can remove the MA or AR component which has less significance.\n\n**H0 (Null hypothesis)** : parameter value = 0\n\n**H1 (Alternate hypothesis)** : parameter value != 0\n\nwe reject Null hypothesis when modulas(parameter_value/std err(parameter_value)) > 2\n\nfor eg: Test Statistics : \n\nma.L2 => mod(-0.1835/ 0.027) = 6.79 > 2 Therefore Null hypothesis is rejected. we include this term\nma.L3 => mod(-0.0203/ 0.027) = 0.75 < 2 Therefore Null hypothesis is not rejected. we do not include this term\n\nTherefore using this test statistics ma.L3, ma.L4, ma.L5, ma.L6 components were removed.\n\nwe fit the new ARIMA model with q tems as 2\n\n\n","metadata":{}},{"cell_type":"markdown","source":"# ARMA (0, 1, 2) X (3, 1, 0) period 7 model\n\n* p - non seasonal AR component -> zero\n* d - difference -> 1 (First order difference)\n* q - non seasonal MA component -> 2\n* P - seasonal AR component -> 3\n* D - period difference -> 1\n* Q - seasonal MA component -> 0\n* S - Period -> 7","metadata":{}},{"cell_type":"code","source":"p = 0\nd = 1\nq = 2\nP = 3\nD = 1\nQ = 0\nS=7\nmodel = sm.tsa.ARIMA(sales_data, order=(p, d, q), seasonal_order=(P, D, Q, S))\nresult = model.fit()\nprint(result.summary())","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:49.7402Z","iopub.execute_input":"2023-06-15T12:54:49.740501Z","iopub.status.idle":"2023-06-15T12:54:53.686837Z","shell.execute_reply.started":"2023-06-15T12:54:49.740476Z","shell.execute_reply":"2023-06-15T12:54:53.685752Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Residuals plot**\n\nThe mean of the residual is zero and residuals are independent. Therefore the model is a good fit.","metadata":{}},{"cell_type":"code","source":"residuals = result.resid\nplt.figure(figsize=(8, 4))\nplt.plot(residuals)\nplt.title('Residuals of ARIMA Model')\nplt.xlabel('Time')\nplt.ylabel('Residuals')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:53.688513Z","iopub.execute_input":"2023-06-15T12:54:53.68922Z","iopub.status.idle":"2023-06-15T12:54:53.996639Z","shell.execute_reply.started":"2023-06-15T12:54:53.68918Z","shell.execute_reply":"2023-06-15T12:54:53.995769Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Residuals ACF**\nMost of the spike were within confidence interval shows they have no correlation. Therefore the model is good fit. ","metadata":{}},{"cell_type":"code","source":"fig, ax = plt.subplots(figsize=(10, 6))\nplot_acf(residuals, ax=ax)\nplt.xlabel('Lag')\nplt.title('Autocorrelation Function (ACF) for Residuals')","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:53.997944Z","iopub.execute_input":"2023-06-15T12:54:53.998514Z","iopub.status.idle":"2023-06-15T12:54:54.335129Z","shell.execute_reply.started":"2023-06-15T12:54:53.998471Z","shell.execute_reply":"2023-06-15T12:54:54.333941Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Fitted ARIMA model visualiation**\nFrom the chart the actual and fitted value of the model is mostly similar. Hence the model is a good fit.","metadata":{}},{"cell_type":"code","source":"fitted_values = result.predict()\nplt.plot(sales_data, label='Actual value')\nplt.plot(fitted_values, label='Fitted value')\nplt.title(\"ARIMA model\")\nplt.legend()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:54:54.336303Z","iopub.execute_input":"2023-06-15T12:54:54.336619Z","iopub.status.idle":"2023-06-15T12:54:54.877406Z","shell.execute_reply.started":"2023-06-15T12:54:54.336591Z","shell.execute_reply":"2023-06-15T12:54:54.876183Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_data = pd.read_csv(\"/kaggle/input/store-sales-time-series-forecasting/test.csv\")\ntest_data.info()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:56:39.554455Z","iopub.execute_input":"2023-06-15T12:56:39.555525Z","iopub.status.idle":"2023-06-15T12:56:39.607765Z","shell.execute_reply.started":"2023-06-15T12:56:39.555481Z","shell.execute_reply":"2023-06-15T12:56:39.607023Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_data[\"date\"].min()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:56:45.734067Z","iopub.execute_input":"2023-06-15T12:56:45.73465Z","iopub.status.idle":"2023-06-15T12:56:45.742531Z","shell.execute_reply.started":"2023-06-15T12:56:45.734611Z","shell.execute_reply":"2023-06-15T12:56:45.741723Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_data[\"date\"].max()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:56:47.568107Z","iopub.execute_input":"2023-06-15T12:56:47.568689Z","iopub.status.idle":"2023-06-15T12:56:47.57678Z","shell.execute_reply.started":"2023-06-15T12:56:47.568659Z","shell.execute_reply":"2023-06-15T12:56:47.575778Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"prediction = result.predict(start = \"2017-08-16\", end = \"2017-08-31\")","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:56:49.792414Z","iopub.execute_input":"2023-06-15T12:56:49.792849Z","iopub.status.idle":"2023-06-15T12:56:49.803305Z","shell.execute_reply.started":"2023-06-15T12:56:49.792816Z","shell.execute_reply":"2023-06-15T12:56:49.802391Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"prediction = prediction.reset_index()\n","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:56:53.664249Z","iopub.execute_input":"2023-06-15T12:56:53.665276Z","iopub.status.idle":"2023-06-15T12:56:53.670831Z","shell.execute_reply.started":"2023-06-15T12:56:53.66524Z","shell.execute_reply":"2023-06-15T12:56:53.669698Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"prediction.columns = [\"date\", \"sales\"]","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:56:56.234929Z","iopub.execute_input":"2023-06-15T12:56:56.236191Z","iopub.status.idle":"2023-06-15T12:56:56.241078Z","shell.execute_reply.started":"2023-06-15T12:56:56.236151Z","shell.execute_reply":"2023-06-15T12:56:56.239943Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"prediction.info()","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:56:58.197894Z","iopub.execute_input":"2023-06-15T12:56:58.198312Z","iopub.status.idle":"2023-06-15T12:56:58.210594Z","shell.execute_reply.started":"2023-06-15T12:56:58.198282Z","shell.execute_reply":"2023-06-15T12:56:58.209295Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_data[\"date\"] = pd.to_datetime(test_data[\"date\"])","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:57:02.262994Z","iopub.execute_input":"2023-06-15T12:57:02.263417Z","iopub.status.idle":"2023-06-15T12:57:02.274481Z","shell.execute_reply.started":"2023-06-15T12:57:02.263384Z","shell.execute_reply":"2023-06-15T12:57:02.27323Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission = pd.merge(test_data, prediction, on=\"date\", how = \"left\")","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:57:04.332537Z","iopub.execute_input":"2023-06-15T12:57:04.332934Z","iopub.status.idle":"2023-06-15T12:57:04.347132Z","shell.execute_reply.started":"2023-06-15T12:57:04.332901Z","shell.execute_reply":"2023-06-15T12:57:04.346024Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission = submission[[\"id\", \"sales\"]]","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:57:06.467934Z","iopub.execute_input":"2023-06-15T12:57:06.468342Z","iopub.status.idle":"2023-06-15T12:57:06.474633Z","shell.execute_reply.started":"2023-06-15T12:57:06.468311Z","shell.execute_reply":"2023-06-15T12:57:06.4738Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission.to_csv('submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2023-06-15T12:57:12.158419Z","iopub.execute_input":"2023-06-15T12:57:12.15879Z","iopub.status.idle":"2023-06-15T12:57:12.237781Z","shell.execute_reply.started":"2023-06-15T12:57:12.158763Z","shell.execute_reply":"2023-06-15T12:57:12.236681Z"},"trusted":true},"execution_count":null,"outputs":[]}]}